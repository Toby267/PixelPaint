@startuml Canvas Class Diagram

left to right direction

interface MouseMotionListener
interface MouseListener
interface MouseWheelListener
class JPanel

interface Tool{
    + mouseDragged(Canvas c, MouseEvent e): void
    + mousePressed(Canvas c, MouseEvent e): void
    + mouseWheelMoved(Canvas c, MouseWheelEvent e): void
    + mouseClicked(Canvas c, MouseEvent e): void
    + mouseMoved(Canvas c, MouseEvent e): void
    + mouseExited(Canvas c, MouseEvent e): void
    + mouseReleased(Canvas c, MouseEvent e): void
    + mouseEntered(Canvas c, MouseEvent e): void
}

class ToolManager {
    - Map<String, Tool> tools

    - activeTool: Tool
    - canvas: Canvas

    + ToolManager(Canvas canvas)

    + registerTool(String ID, Tool t): void
    + getTool(String ID): Tool
    + setActiveTool(Tool activeTool): void
    + setActiveTool(String ID): void
}

class Canvas {
    - currentTransform: Transform
    - zoomLevel: float

    - zoomCenter: Point2D
    - hoverPixel: Point2D

    + Canvas()
    + Canvas(Image activeImage)
    
    + setActiveImage(Image activeImage): void
    + getActiveImage(): Image

    + getPixelPoint(Point p): Point2D

}

class Image {
    - activeLayerIndex: int 
    - savePath: String

    - width: int
    - height: int

    - pixels: Color[][]

    + Image()
    + Image(Layer layer)
    + Image(Layer[] layers)
    + Image(Color c, int w, int h)

    + getLayerCount(): int
    + getWidth(): int
    + getHeight(): int
    + getSavePath(): String

    + setWidth(int w): void
    + setHeight(int h): void
    + setSavePath(String savePath): void

    + getLayer(int idex): Layer
    + getActiveLayer(): Layer

    + setActiveLayer(int index): void
    + setActiveLayer(Layer l): void

    + addLayer(int index): void
    + removeLayer(int index): void
    + removeLayers(int startIndex, endIndex): void
    + moveLayer(int oldIndex, int newIndex): void

    + compressLayers(int startIndex, int endIndex): Layer

    - toPixels() : void
    + recalculatePixels(int x, int y, int width, int height): void
    + recalculatePixel(int x, int y): void
    + getPixels(): Color[][]
}

class Layer {
    - pixels: Color[][]
    - active: boolean

    + Layer(int width, int height)
    + Layer(Color color, int width, int height)
    + Layer(Color[][] pixels)

    + getPixel(int x, int y): Color
    + getPixels(int x, int y, int width, int height): Color[][]

    + setPixel(Color c, int x, int y): void
    + setPixels(Color c, int x, int y, int width, int height): void

    + getActive(): boolean
    + setActive(boolean active): void

    + compress(Layer l1, Layer l2): Layer
}

Image --> "*" Layer
Canvas --> "1" Image
Canvas --> "1" ToolManager

ToolManager --> "*" Tool

MouseListener <|.. ToolManager : "Implements"
MouseMotionListener <|.. ToolManager : "Implements"
MouseWheelListener <|.. ToolManager : "Implements"

JPanel <|-- Canvas: "Extends"

@enduml